{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jatin\\\\Downloads\\\\Compressed\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\src\\\\components\\\\common\\\\ListGroup\\\\index.js\",\n  _this = this;\nimport React from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ListGroup = function ListGroup(props) {\n  var onChange = props.onChange,\n    active = props.active,\n    options = props.options;\n  options.sort();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: CheckClass('All', active),\n      onClick: function onClick() {\n        return onChange('All');\n      },\n      children: \" All\"\n    }, 'all', false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this), options && options.map(function (el) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: CheckClass(el.genre, active),\n        onClick: function onClick() {\n          return onChange(el.genre);\n        },\n        children: el.genre\n      }, el._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n_c = ListGroup;\nexport default ListGroup;\nfunction CheckClass(genre, active) {\n  var classButtons = \"list-group-item list-item\";\n  return genre === active ? classButtons + ' list-item-active' : classButtons;\n}\n_c2 = CheckClass;\nvar _c, _c2;\n$RefreshReg$(_c, \"ListGroup\");\n$RefreshReg$(_c2, \"CheckClass\");","map":{"version":3,"names":["React","ListGroup","props","onChange","active","options","sort","CheckClass","map","el","genre","_id","classButtons"],"sources":["C:/Users/Jatin/Downloads/Compressed/iCinema-master/iCinema-master/frontend/src/components/common/ListGroup/index.js"],"sourcesContent":["import React from 'react';\nimport './style.css';\n\nconst ListGroup = props => {\n  let { onChange, active, options } = props;\n  \n  options.sort();\n  return ( \n    <div className=\"list-group\">  \n      <li key='all'className={CheckClass('All', active)} onClick={() => onChange('All')}> All\n      </li>\n      { \n        options &&\n        options.map(el => \n          <li \n            key={el._id} \n            className={CheckClass(el.genre, active)}\n            onClick={() => onChange(el.genre)}>\n            {el.genre}\n          </li>\n        )}\n    </div>\n  );\n}\nexport default ListGroup;\n\nfunction CheckClass(genre, active) {\n  const classButtons = \"list-group-item list-item\";\n  return genre === active ? classButtons + ' list-item-active' :  classButtons;\n}\n "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC;AAErB,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAGC,KAAK,EAAI;EACzB,IAAMC,QAAQ,GAAsBD,KAAK,CAAnCC,QAAQ;IAAEC,MAAM,GAAcF,KAAK,CAAzBE,MAAM;IAAEC,OAAO,GAAKH,KAAK,CAAjBG,OAAO;EAE/BA,OAAO,CAACC,IAAI,EAAE;EACd,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,wBACzB;MAAa,SAAS,EAAEC,UAAU,CAAC,KAAK,EAAEH,MAAM,CAAE;MAAC,OAAO,EAAE;QAAA,OAAMD,QAAQ,CAAC,KAAK,CAAC;MAAA,CAAC;MAAA;IAAA,GAA1E,KAAK;MAAA;MAAA;MAAA;IAAA,SACR,EAEHE,OAAO,IACPA,OAAO,CAACG,GAAG,CAAC,UAAAC,EAAE;MAAA,oBACZ;QAEE,SAAS,EAAEF,UAAU,CAACE,EAAE,CAACC,KAAK,EAAEN,MAAM,CAAE;QACxC,OAAO,EAAE;UAAA,OAAMD,QAAQ,CAACM,EAAE,CAACC,KAAK,CAAC;QAAA,CAAC;QAAA,UACjCD,EAAE,CAACC;MAAK,GAHJD,EAAE,CAACE,GAAG;QAAA;QAAA;QAAA;MAAA,SAIR;IAAA,EACN;EAAA;IAAA;IAAA;IAAA;EAAA,SACC;AAEV,CAAC;AAAA,KApBKV,SAAS;AAqBf,eAAeA,SAAS;AAExB,SAASM,UAAU,CAACG,KAAK,EAAEN,MAAM,EAAE;EACjC,IAAMQ,YAAY,GAAG,2BAA2B;EAChD,OAAOF,KAAK,KAAKN,MAAM,GAAGQ,YAAY,GAAG,mBAAmB,GAAIA,YAAY;AAC9E;AAAC,MAHQL,UAAU;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}